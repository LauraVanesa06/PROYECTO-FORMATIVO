<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <%= stylesheet_link_tag "modals", media: "all" %>
  
</head>
<body>
  <div class="contact-container">
    <%= form_with(model: product, local: true, html: { multipart: true}, class: 'form-form') do |form| %>
      <% if product.errors.any? %>
        <div id="error_explanation">
          <h2><%= pluralize(product.errors.count, "error") %> prohibited this product from being saved:</h2>

          <ul>
            <% product.errors.each do |error| %>
              <li><%= error.full_message %></li> 
            <% end %>
          </ul>
        </div>
      <% end %>
      <section class="form">
        <label for="file-input" class="drop-container" id="drop-container">
          <span class="form-title">Agregar imagen</span>
          <span class="drop-title">Arrastra y suelta aquí<br>o</span>
          <%= form.file_field :images, id: "file-input", multiple: true, accept: "image/*", direct_upload: true %>
        </label>

        <p style="margin-top:15px; margin-bottom:6px; font-size:14px; text-align: start; color: white;"><strong>Imágenes:</strong></p>
        <% if product.persisted? && product.images.attached? %>
          <div id="preview-container" style="display:flex; flex-wrap:wrap;">
            <% product.images.each do |img| %>
              <div class="style" style="position: relative;">
                <% if img.blob.present? && (img.blob.service.exist?(img.blob.key) rescue false) %>
                  <%= image_tag img.variant(resize_to_limit: [160, 160]), style: "display:block; margin:0 auto 6px;" %>
                <% else %>
                  <div class="error-overlay">
                    ⚠ Imagen no encontrada
                  </div>
                <% end %>
                <label class="style-check">
                  <input type="checkbox" name="product[remove_image_ids][]" value="<%= img.id %>">
                </label>
              </div>
            <% end %>
          </div>
        <% else %>
          <div id="preview-container" style="display:flex; flex-wrap:wrap;"></div>
        <% end %>

        <script>
          const fileInput = document.getElementById('file-input');
          const previewContainer = document.getElementById('preview-container');
          const dropContainer = document.getElementById('drop-container');

          let dt = new DataTransfer();

          function handleFiles(files) {
            [...files].forEach(file => {
              if (!file.type.startsWith("image/")) return;

              dt.items.add(file);
              fileInput.files = dt.files;

              const reader = new FileReader();
              reader.onload = function(e) {
                const wrapper = document.createElement("div");
                wrapper.classList.add("style");

                const img = document.createElement("img");
                img.src = e.target.result;
                img.style.display = "block";
                img.style.maxWidth = "90%";
                img.style.height = "80px";
                img.style.objectFit = "contain";

                const label = document.createElement("label");
                label.classList.add("style-check");

                const checkbox = document.createElement("input");
                checkbox.type = "checkbox";
                checkbox.name = "product[remove_temp_image_names][]";
                checkbox.value = file.name;

                label.appendChild(checkbox);
                wrapper.appendChild(img);
                wrapper.appendChild(label);
                previewContainer.appendChild(wrapper);
              }
              reader.readAsDataURL(file);
            });
          }

          // input por click
          fileInput.addEventListener('change', function(event) {
            handleFiles(event.target.files);
          });

          // arrastrar y soltar
          dropContainer.addEventListener('dragover', function(event) {
            event.preventDefault();
            dropContainer.classList.add("dragover");
          });

          dropContainer.addEventListener('dragleave', function(event) {
            dropContainer.classList.remove("dragover");
          });

          dropContainer.addEventListener('drop', function(event) {
            event.preventDefault();
            dropContainer.classList.remove("dragover");
            handleFiles(event.dataTransfer.files);
          });
        </script>
      </section>

      <section class="form-edit-new">
        <div class= "end">
          <div class="input-box">
            <label>Nombre</label>
            <%= form.text_field :nombre, id: 'edit-nombre' %>
          </div>
          <div class="column">
            <div class="input-box">
              <label>Precio</label>
              <%= form.text_field :precio, id: 'edit-precio' %>
            </div>
            <div class="column">
              <div class="input-box input2">
                <label>Stock Inicial</label>
                <%= form.number_field :stock, id: 'edit-stock' %>
              </div>
              <div class="input-box input2">
                <label>Cod Producto</label>
                <%= form.text_field :codigo_producto, id: 'edit-codigo_producto', readonly: true%>
              </div>
            </div>
          </div>
          <div class="column">
            <div class="input-box">
              <label>Marca</label>
              <%= form.collection_select :marca_id, Marca.all, :id, :nombre, { prompt: "Seleccione una marca" }, id: "edit-marca", class:'select-box' %>
            </div>
            <div class="input-box">
              <label>Modelo</label>
              <%= form.text_field :modelo, id: 'edit-modelo' %>
            </div>
          </div>
          <div class="input-box">
            <label>Descripción</label>
            <%= form.text_area :descripcion, id: 'edit-descripcion', class: 'descripcion' %>
          </div>
          <div class="input-box address">
            <div class="input-box">
              <label>Categoria</label>
              <%= form.collection_select :category_id, Category.all, :id, :nombre, { prompt: "Seleccione una categoría" }, id: 'edit-categoria', class:'select-box' %>
            </div>
            <div class="input-box">
              <label>Proveedor</label>
              <%= form.collection_select :supplier_id, Supplier.all, :id, :nombre, { prompt: "Seleccione un proveedor" }, id: 'edit-proveedor', class:'select-box' %>
            </div>
          </div>
          <div class="row">
            <%# link_to "Eliminar", product_path(product), method: :delete, data: { confirm: "¿Estás segura que quieres eliminar este producto?" }, class: "eliminar" %>
            <%= form.submit "Guardar", class: 'guardar' %>
          </div>
        </div>
      </section>
    <% end %>
  </div>

  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const nombreInput = document.getElementById("edit-nombre");
      const codigoInput = document.getElementById("edit-codigo_producto");
      let timeout = null;

      if (nombreInput && codigoInput) {
        nombreInput.addEventListener("input", () => {
          const nombre = nombreInput.value.trim();

          // Limpiar código si no hay nombre
          if (!nombre) {
            codigoInput.value = "";
            return;
          }

          // Debounce: esperar 300ms después de escribir para llamar al servidor
          clearTimeout(timeout);
          timeout = setTimeout(() => {
            fetch(`/products/generate_code?nombre=${encodeURIComponent(nombre)}`, {
              headers: { 'Accept': 'application/json' }
            })
            .then(response => {
              if (!response.ok) throw new Error("Error en la respuesta del servidor");
              return response.json();
            })
            .then(data => {
              if (data.codigo) {
                codigoInput.value = data.codigo; // actualizar input en tiempo real
              }
            })
            .catch(err => console.error("No se pudo generar el código:", err));
          }, 300); // 300ms de espera
        });
      }
    });
  </script>


</body>
</html>